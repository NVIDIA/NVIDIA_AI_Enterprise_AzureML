################################################################################
# Copyright (c) 2022, NVIDIA CORPORATION. All rights reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.
################################################################################

[property]
gpu-id=0
####################################
# Pre-processing:
#   mean subtraction and std division with these values: 
#     mean=[123.675, 116.28, 103.53], 
#     std=[58.395, 57.12, 57.375] (R,G,B)
#   ==> offsets = mean
#   ==> net-scale-factor = 1/avg(std)
####################################
net-scale-factor=0.01735207357279195
offsets=123.675;116.28;103.53

# The model input channel is 3, using RGB color format.
model-color-format=0

infer-dims=3;1024;1820
batch-size=1
workspace-size=1048576
labelfile-path=./labels.txt
model-engine-file=./citySemSegFormer.etlt_b1_gpu0_fp16.engine
tlt-encoded-model=./citySemSegFormer.etlt
tlt-model-key=tlt_encode
## 0=Detector, 1=Classifier, 2=Semantic Segmentation, 3=Instance Segmentation, 100=Other
## 100=other skips nvinfer post-processing, uses pgie_pad_buffer_probe_network_type100() instead.
network-type=100 
## num-detected-classes= is required to set NvDsInferSegmentationMeta::classes.
num-detected-classes=20
## Have to be 1 in order to access output tensors.
output-tensor-meta=1
## Output tensor order, 0(default value) for CHW and 1 for HWC
segmentation-output-order=1
segmentation-threshold=0.0

## 0=FP32, 1=INT8, 2=FP16 mode
network-mode=2
interval=0
gie-unique-id=1
cluster-mode=2

[class-attrs-all]
roi-top-offset=0
roi-bottom-offset=0
detected-min-w=0
detected-min-h=0
detected-max-w=0
detected-max-h=0